{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport EventEmitter from \"../vendor/emitter/EventEmitter\";\nimport EventSubscriptionVendor from \"../vendor/emitter/_EventSubscriptionVendor\";\n\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\n\nvar RCTDeviceEventEmitter = function (_EventEmitter) {\n  _inherits(RCTDeviceEventEmitter, _EventEmitter);\n\n  var _super = _createSuper(RCTDeviceEventEmitter);\n\n  function RCTDeviceEventEmitter() {\n    var _this;\n\n    _classCallCheck(this, RCTDeviceEventEmitter);\n\n    var sharedSubscriber = new EventSubscriptionVendor();\n    _this = _super.call(this, sharedSubscriber);\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n\n  _createClass(RCTDeviceEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      if (__DEV__) {\n        checkNativeEventModule(eventType);\n      }\n\n      return _get(_getPrototypeOf(RCTDeviceEventEmitter.prototype), \"addListener\", this).call(this, eventType, listener, context);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      if (__DEV__) {\n        checkNativeEventModule(eventType);\n      }\n\n      _get(_getPrototypeOf(RCTDeviceEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventType);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      if (subscription.emitter !== this) {\n        subscription.emitter.removeSubscription(subscription);\n      } else {\n        _get(_getPrototypeOf(RCTDeviceEventEmitter.prototype), \"removeSubscription\", this).call(this, subscription);\n      }\n    }\n  }]);\n\n  return RCTDeviceEventEmitter;\n}(EventEmitter);\n\nexport default new RCTDeviceEventEmitter();","map":{"version":3,"names":["EventEmitter","EventSubscriptionVendor","checkNativeEventModule","eventType","lastIndexOf","Error","RCTDeviceEventEmitter","sharedSubscriber","listener","context","__DEV__","subscription","emitter","removeSubscription"],"sources":["D:/Youcode/Projet/Full Stcuk JavaScript/ZELIVERY/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport EventEmitter from '../vendor/emitter/EventEmitter';\nimport type EmitterSubscription from '../vendor/emitter/_EmitterSubscription';\nimport EventSubscriptionVendor from '../vendor/emitter/_EventSubscriptionVendor';\n\nfunction checkNativeEventModule(eventType: ?string) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error(\n        '`' +\n          eventType +\n          '` event should be registered via the StatusBarIOS module',\n      );\n    }\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error(\n        '`' +\n          eventType +\n          '` event should be registered via the Keyboard module',\n      );\n    }\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error(\n        '`' +\n          eventType +\n          '` event should be registered via the AppState module',\n      );\n    }\n  }\n}\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\nclass RCTDeviceEventEmitter extends EventEmitter {\n  sharedSubscriber: EventSubscriptionVendor;\n\n  constructor() {\n    const sharedSubscriber = new EventSubscriptionVendor();\n    super(sharedSubscriber);\n    this.sharedSubscriber = sharedSubscriber;\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: ?string) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      super.removeSubscription(subscription);\n    }\n  }\n}\n\nexport default (new RCTDeviceEventEmitter(): RCTDeviceEventEmitter);\n"],"mappings":"AAUA;;;;;;;;;;;;;AAEA,OAAOA,YAAP;AAEA,OAAOC,uBAAP;;AAEA,SAASC,sBAAT,CAAgCC,SAAhC,EAAoD;EAClD,IAAIA,SAAJ,EAAe;IACb,IAAIA,SAAS,CAACC,WAAV,CAAsB,WAAtB,EAAmC,CAAnC,MAA0C,CAA9C,EAAiD;MAC/C,MAAM,IAAIC,KAAJ,CACJ,MACEF,SADF,GAEE,0DAHE,CAAN;IAKD;;IACD,IAAIA,SAAS,CAACC,WAAV,CAAsB,UAAtB,EAAkC,CAAlC,MAAyC,CAA7C,EAAgD;MAC9C,MAAM,IAAIC,KAAJ,CACJ,MACEF,SADF,GAEE,sDAHE,CAAN;IAKD;;IACD,IAAIA,SAAS,KAAK,mBAAd,IAAqCA,SAAS,KAAK,eAAvD,EAAwE;MACtE,MAAM,IAAIE,KAAJ,CACJ,MACEF,SADF,GAEE,sDAHE,CAAN;IAKD;EACF;AACF;;IAMKG,qB;;;;;EAGJ,iCAAc;IAAA;;IAAA;;IACZ,IAAMC,gBAAgB,GAAG,IAAIN,uBAAJ,EAAzB;IACA,0BAAMM,gBAAN;IACA,MAAKA,gBAAL,GAAwBA,gBAAxB;IAHY;EAIb;;;;WAED,qBACEJ,SADF,EAEEK,QAFF,EAGEC,OAHF,EAIuB;MACrB,IAAIC,OAAJ,EAAa;QACXR,sBAAsB,CAACC,SAAD,CAAtB;MACD;;MACD,8FAAyBA,SAAzB,EAAoCK,QAApC,EAA8CC,OAA9C;IACD;;;WAED,4BAAmBN,SAAnB,EAAuC;MACrC,IAAIO,OAAJ,EAAa;QACXR,sBAAsB,CAACC,SAAD,CAAtB;MACD;;MACD,8FAAyBA,SAAzB;IACD;;;WAED,4BAAmBQ,YAAnB,EAAsD;MACpD,IAAIA,YAAY,CAACC,OAAb,KAAyB,IAA7B,EAAmC;QACjCD,YAAY,CAACC,OAAb,CAAqBC,kBAArB,CAAwCF,YAAxC;MACD,CAFD,MAEO;QACL,8FAAyBA,YAAzB;MACD;IACF;;;;EAjCiCX,Y;;AAoCpC,eAAgB,IAAIM,qBAAJ,EAAhB"},"metadata":{},"sourceType":"module"}