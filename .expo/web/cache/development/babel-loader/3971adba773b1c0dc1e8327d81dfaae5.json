{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./SigninScreen.Style\";\nimport axios from \"../../api/axios\";\nimport jwtDecode from \"jwt-decode\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SigninScreen = function SigninScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      setAuth = _useAuth.setAuth;\n\n  var _useState = useState(\"efdf@gmail.com\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"dafdfdfa\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handelSubmit = function handelSubmit() {\n    var user, _await$axios$post, data, accessToken, payload, _id, _email, firstName, lastName, role, _error$response, _error$response$data, _error$response2, _error$response2$data;\n\n    return _regeneratorRuntime.async(function handelSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = {\n              email: email,\n              password: password\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(\"/login\", user, {\n              withCredentials: true\n            }));\n\n          case 4:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n            accessToken = data.accessToken;\n            payload = jwtDecode(accessToken);\n            _id = payload._id, _email = payload.email, firstName = payload.firstName, lastName = payload.lastName, role = payload.role;\n            setAuth({\n              _id: _id,\n              email: _email,\n              firstName: firstName,\n              lastName: lastName,\n              role: role,\n              accessToken: accessToken\n            });\n            navigation.navigate(\"Home\");\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            _context.t0 != null && (_error$response = _context.t0.response) != null && (_error$response$data = _error$response.data) != null && _error$response$data.message ? Alert.alert(\"Invalid input\", _context.t0 == null ? void 0 : (_error$response2 = _context.t0.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message, [{\n              text: \"OK\"\n            }]) : console.error(_context.t0 == null ? void 0 : _context.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 13]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"SIGN IN\"\n      }), _jsx(Text, {\n        children: \"Complete this step for best adjustment\"\n      })]\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Email\"\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        style: styles.input,\n        value: email,\n        onChangeText: function onChangeText(value) {\n          return setEmail(value);\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        keyboardType: \"visible-password\",\n        style: styles.input,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return setPassword(value);\n        }\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            fontSize: 10,\n            textAlign: \"right\"\n          },\n          children: \"Forgot Password?\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.signupButton,\n        onPress: handelSubmit,\n        children: _jsx(Text, {\n          style: styles.signupButtonText,\n          children: \"SIGN IN\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.footer,\n      children: _jsxs(Text, {\n        style: styles.footerText,\n        children: [\"I don't have a account ?\", _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Register\");\n          },\n          children: _jsx(Text, {\n            style: styles.footerLink,\n            children: \" Sign Up\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default SigninScreen;","map":{"version":3,"names":["React","useState","styles","axios","jwtDecode","useAuth","SigninScreen","navigation","setAuth","email","setEmail","password","setPassword","handelSubmit","user","post","withCredentials","data","accessToken","payload","_id","firstName","lastName","role","navigate","response","message","Alert","alert","text","console","error","container","header","title","form","label","input","value","fontSize","textAlign","signupButton","signupButtonText","footer","footerText","footerLink"],"sources":["D:/Youcode/Projet/Full Stcuk JavaScript/ZELIVERY/src/screen/Signin/SigninScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  Alert,\r\n} from \"react-native\";\r\nimport styles from \"./SigninScreen.Style\";\r\nimport axios from \"../../api/axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nconst SigninScreen = ({ navigation }) => {\r\n  const { setAuth } = useAuth();\r\n\r\n  const [email, setEmail] = useState(\"efdf@gmail.com\");\r\n  const [password, setPassword] = useState(\"dafdfdfa\");\r\n\r\n  const handelSubmit = async () => {\r\n    const user = { email, password };\r\n    try {\r\n      const { data } = await axios.post(\"/login\", user, {\r\n        withCredentials: true,\r\n      });\r\n      const { accessToken } = data;\r\n      const payload = jwtDecode(accessToken);\r\n      const { _id, email, firstName, lastName, role } = payload;\r\n\r\n      setAuth({ _id, email, firstName, lastName, role, accessToken });\r\n      navigation.navigate(\"Home\");\r\n    } catch (error) {\r\n      error?.response?.data?.message\r\n        ? Alert.alert(\"Invalid input\", error?.response?.data?.message, [\r\n            { text: \"OK\" },\r\n          ])\r\n        : console.error(error?.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>SIGN IN</Text>\r\n        <Text>Complete this step for best adjustment</Text>\r\n      </View>\r\n      <View style={styles.form}>\r\n        <Text style={styles.label}>Email</Text>\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          keyboardType=\"email-address\"\r\n          style={styles.input}\r\n          value={email}\r\n          onChangeText={(value) => setEmail(value)}\r\n        />\r\n        <Text style={styles.label}>Password</Text>\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          keyboardType=\"visible-password\"\r\n          style={styles.input}\r\n          value={password}\r\n          onChangeText={(value) => setPassword(value)}\r\n        />\r\n        <View>\r\n          <Text style={{ fontSize: 10, textAlign: \"right\" }}>\r\n            Forgot Password?\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.signupButton} onPress={handelSubmit}>\r\n          <Text style={styles.signupButtonText}>SIGN IN</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.footer}>\r\n        <Text style={styles.footerText}>\r\n          I don't have a account ?\r\n          <TouchableWithoutFeedback\r\n            onPress={() => navigation.navigate(\"Register\")}\r\n          >\r\n            <Text style={styles.footerLink}> Sign Up</Text>\r\n          </TouchableWithoutFeedback>\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SigninScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}